name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: us-east-1 # Specify your AWS region here

    - name: Build and Push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: 241533126175.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: my-node-app
        IMAGE_TAG: ${{ github.sha }}  # Use commit SHA as the image tag
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up AWS Credentials for kubectl
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1

    - name: Deploy to Kubernetes
      run: |
        # Decode and configure kubectl
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
        export KUBECONFIG=kubeconfig
        
        # Update deployment image with commit SHA tag and monitor the rollout
        kubectl set image deployment/node-app-deployment node-app=$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} -n default
        kubectl rollout status deployment/node-app-deployment -n default